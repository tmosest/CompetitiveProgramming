package com.tmosest.competitiveprogramming.hackerearth.algorithms.search.binarysearch;

import java.io.IOException;
import org.junit.Assert;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import com.tmosest.competitiveprogramming.hackerrank.HackerrankUtil;

@DisplayName("Hackerrank Binary Search: Sherlock and Numbers")
class SherlockAndNumbersTest {

  public static void test(String input, long[] output, boolean debugMode) throws IOException {
    HackerrankUtil.setSystemIn(input);
    SherlockAndNumbers.debugMode = debugMode;
    Assert.assertArrayEquals(output, SherlockAndNumbers.solve());
  }

  @Test
  @DisplayName("Test Case 0")
  void testCase0() throws IOException {
    String input = "2\n" + "4 1 2\n" + "1\n" + "5 2 4\n" + "1 3";
    long[] output = {3, -1};
    test(input, output, false);
  }

  @Test
  @DisplayName("Test Case 1")
  void testCase1() throws IOException {
    String input = "10\n" + "1000 40 125\n"
        + "13 23 46 54 81 88 93 105 160 172 254 273 296 307 380 387 507 528 604 611 645 663 672 681 718 741 745 747 748 752 772 790 802 857 858 874 893 894 939 968\n"
        + "1000 500 654\n"
        + "1 2 4 5 7 8 9 12 16 18 19 22 27 28 29 30 35 36 37 39 40 43 44 45 48 49 55 58 59 63 64 67 70 71 72 75 76 79 80 83 86 90 94 95 96 100 101 104 105 106 108 110 112 113 115 116 117 122 123 124 126 127 128 129 130 132 133 134 137 138 139 140 141 142 143 152 155 159 160 162 163 165 166 167 168 170 171 172 173 179 180 181 185 189 192 194 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 218 219 220 221 222 224 228 229 231 232 236 239 242 246 247 248 251 254 257 261 262 263 266 270 271 272 279 281 283 287 289 290 293 297 299 301 303 304 305 309 310 312 313 317 318 319 320 322 323 324 325 326 328 331 332 333 336 337 339 340 341 342 344 345 346 349 354 356 358 362 363 365 366 368 371 372 377 379 380 381 382 383 384 386 387 388 389 390 391 392 393 395 396 397 400 402 405 408 413 414 416 417 418 420 421 428 430 433 436 439 441 442 443 444 445 446 451 453 457 463 465 468 469 471 472 475 476 481 482 485 486 487 489 496 497 498 499 501 505 507 511 512 514 517 522 524 527 534 535 536 541 543 544 546 547 550 554 555 556 557 558 559 560 562 563 565 567 568 576 577 578 579 580 581 582 585 589 591 593 594 596 597 602 605 612 614 616 617 618 619 620 621 626 628 629 630 631 635 636 639 640 642 643 644 645 646 647 649 650 651 652 653 654 656 657 658 659 660 661 662 663 664 665 668 669 670 675 676 678 681 682 683 686 692 693 695 696 697 700 702 706 707 708 709 711 713 717 718 720 721 722 723 724 728 729 730 731 735 736 738 741 742 744 745 747 748 750 751 752 754 755 757 759 761 763 764 765 769 778 780 783 789 790 794 795 796 800 802 804 805 807 808 815 816 818 819 821 823 825 829 831 832 833 836 837 838 839 840 843 846 847 850 851 854 856 857 859 861 863 868 871 875 876 879 881 887 888 889 890 891 893 894 895 896 897 902 904 906 909 910 911 912 913 914 916 917 918 921 928 930 933 934 935 937 938 939 940 941 945 946 952 954 955 956 959 961 964 965 968 971 973 974 976 977 979 983 984 986 988 990 992 993 996 997 1000\n"
        + "1000 4 764\n" + "182 659 818 999\n" + "1000 100 169\n"
        + "2 3 14 39 42 46 60 63 75 88 117 125 129 137 155 169 181 184 197 209 223 233 252 259 262 267 278 292 305 329 339 341 355 362 364 378 399 405 409 422 428 430 444 451 454 505 507 511 520 521 522 535 536 540 545 560 576 585 599 600 605 609 611 617 638 656 657 676 690 694 695 712 725 728 743 766 799 800 801 803 812 816 817 831 835 840 855 876 879 893 894 899 907 909 935 942 958 964 985 1000\n"
        + "1000 50 489\n"
        + "17 27 52 76 79 95 106 129 141 163 174 199 204 248 253 257 261 324 325 327 348 360 378 382 414 462 489 522 526 568 588 595 601 609 673 739 758 792 813 814 829 851 865 891 920 936 957 961 983 985\n"
        + "1000 400 624\n"
        + "2 5 7 8 10 12 15 16 17 21 23 27 31 33 35 39 40 43 46 47 57 60 63 66 67 68 71 72 76 81 82 92 100 103 104 105 108 112 113 114 115 118 119 123 124 125 130 133 137 139 141 152 154 156 158 160 162 165 168 169 171 173 177 180 183 185 186 187 188 191 192 196 197 199 203 204 205 206 207 208 209 210 211 212 214 216 217 218 222 225 227 230 235 240 242 243 245 249 251 255 259 261 266 268 275 280 283 285 287 292 293 294 295 296 297 299 301 305 307 309 315 316 317 318 319 321 323 325 328 331 336 337 343 347 354 355 356 359 361 362 366 373 374 375 378 380 384 387 388 391 393 395 398 402 403 405 406 410 412 418 422 431 434 436 437 438 439 441 442 443 444 445 446 448 450 454 456 458 459 460 461 463 470 471 475 476 479 483 485 491 492 503 504 505 506 507 509 511 512 515 518 519 524 525 528 531 532 534 535 546 547 553 558 560 561 564 566 570 572 574 576 577 579 582 584 587 588 594 595 596 600 604 605 612 615 616 619 622 623 625 628 632 633 634 636 637 639 640 643 648 652 653 655 656 657 661 664 665 669 670 674 676 681 683 684 687 690 692 700 701 702 703 704 716 717 720 726 728 730 731 732 733 734 736 738 742 743 744 746 747 749 750 753 755 756 758 760 761 762 765 766 767 770 773 774 776 779 780 787 788 789 792 795 800 803 806 808 811 814 815 816 817 818 822 824 825 828 829 832 835 837 840 841 842 850 852 853 854 855 856 857 858 860 865 867 868 875 878 882 885 887 889 891 892 897 899 900 903 904 905 907 908 911 915 916 917 919 920 923 927 928 929 930 936 939 951 954 956 961 962 963 964 966 969 973 974 975 978 979 980 984 986 987 989 990 991 992 993 994 996\n"
        + "1000 40 1\n"
        + "6 109 115 116 130 153 177 204 215 219 224 244 247 266 271 291 359 365 384 392 396 415 430 485 492 521 525 530 584 593 608 639 669 750 778 787 791 797 827 877\n"
        + "1000 500 1\n"
        + "5 6 11 16 17 18 20 21 25 26 28 31 33 37 38 41 42 46 48 51 52 54 55 57 59 60 61 63 65 67 70 73 77 83 87 89 91 93 95 96 97 98 99 100 101 104 106 113 114 115 116 117 118 119 120 122 123 126 129 130 131 135 137 145 149 150 151 155 156 158 160 161 162 163 165 169 170 171 172 173 176 177 182 183 185 186 188 190 194 195 197 198 200 201 203 204 205 211 213 214 215 218 222 226 228 229 231 232 233 236 237 239 240 242 246 247 248 249 252 254 256 257 259 261 263 265 267 273 275 276 277 278 279 280 283 284 285 286 287 288 295 296 297 300 301 303 308 310 311 318 320 321 322 323 324 326 328 329 332 336 341 342 348 349 352 353 354 355 356 357 358 359 362 364 365 367 368 370 373 374 375 376 381 384 385 386 388 391 392 393 398 401 403 404 405 407 409 413 414 417 418 420 422 426 427 430 432 434 436 437 438 440 444 446 448 449 452 454 455 456 458 459 463 464 465 467 468 472 473 478 479 482 486 490 492 493 494 497 500 504 506 512 513 515 516 517 520 522 523 526 528 529 530 531 532 535 538 539 542 544 550 552 553 558 560 562 565 567 568 569 571 574 577 578 579 580 584 587 588 594 596 598 599 600 601 602 603 604 606 607 610 611 612 617 618 621 623 624 625 628 629 631 632 633 635 636 637 639 640 641 642 643 646 647 648 649 651 652 654 655 657 658 660 661 662 663 664 667 668 670 671 672 673 674 675 677 678 679 682 684 686 687 688 690 691 693 694 700 706 708 709 710 713 714 719 720 721 723 724 725 726 730 731 732 735 737 738 739 740 743 744 746 748 752 753 754 756 757 758 759 760 761 762 764 765 767 769 770 771 772 773 775 778 779 781 782 783 790 791 792 798 799 801 802 805 806 810 812 813 814 815 816 817 818 819 820 822 823 824 826 828 829 830 832 833 835 836 839 842 846 848 850 851 854 856 857 858 860 861 865 867 868 870 874 876 879 880 885 891 892 893 894 897 899 900 904 905 910 911 920 922 923 925 927 928 929 930 931 933 935 936 937 940 941 942 943 944 945 951 952 955 958 959 960 963 968 971 973 975 980 981 983 985 986 991 994 995 997 999 1000\n"
        + "1000 4 311\n" + "75 124 402 421\n" + "1000 400 347\n"
        + "1 6 8 10 17 19 23 24 25 27 28 29 33 38 41 43 45 49 50 51 60 61 64 65 68 71 72 73 74 78 85 87 89 91 94 95 96 97 99 100 101 106 109 113 114 116 119 121 123 125 126 127 128 129 134 135 136 139 140 141 144 145 146 151 152 154 155 157 158 162 163 165 169 172 173 177 178 180 184 185 186 187 193 194 195 197 199 202 203 208 209 210 212 215 220 224 227 228 231 232 234 235 240 241 245 247 249 252 253 254 255 257 259 261 267 268 273 278 282 287 290 292 296 298 305 307 309 310 312 313 316 324 326 329 330 333 337 338 341 347 348 351 352 354 355 356 359 361 362 365 369 373 376 379 387 388 391 392 394 395 398 400 404 409 413 414 415 425 426 427 430 435 436 443 444 445 449 450 452 453 455 456 458 459 461 462 464 465 467 470 472 476 478 480 486 494 495 496 497 498 501 502 505 507 508 513 518 519 523 526 528 529 530 532 533 534 536 540 543 548 550 551 555 557 562 563 564 566 570 571 572 574 577 579 580 581 582 583 585 586 587 594 597 599 601 603 606 607 609 610 615 619 622 627 628 629 630 632 633 636 638 647 649 652 654 655 658 659 660 663 665 666 667 670 672 676 682 683 684 685 689 691 692 695 696 698 703 704 707 708 713 714 719 720 729 730 732 734 735 738 739 749 750 751 753 759 760 762 763 766 768 770 772 777 784 786 787 788 790 791 797 802 807 808 810 811 812 813 814 815 816 820 827 829 830 832 834 835 838 841 845 847 848 852 854 858 860 861 864 866 868 870 871 874 878 879 882 885 886 887 892 893 895 898 899 900 902 905 910 913 916 920 922 927 930 932 933 937 941 948 949 951 952 959 960 962 963 965 966 970 981 983 984 985 987 989 990 992 994 995";
    long[] output = {133, -1, 766, 187, 516, -1, 1, 1, 313, 588};
    test(input, output, true);
  }

}
